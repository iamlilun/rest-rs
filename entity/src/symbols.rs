//! SeaORM Entity. Generated by sea-orm-codegen 0.9.1

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "symbols")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub name: String,
    pub alias: String,
    pub status: String,
    pub base_currency: String,
    pub quote_currency: String,
    pub price_scale: i32,
    pub taker_fee: String,
    pub maker_fee: String,
    pub funding_interval: i32,
    pub max_trading_qty: f64,
    pub min_trading_qty: f64,
    pub qty_step: f64,
    pub post_only_max_trading_qty: String,
    pub min_price: String,
    pub max_price: String,
    pub tick_size: String,
    pub min_leverage: i32,
    pub max_leverage: i32,
    pub leverage_step: String,
}

#[derive(Copy, Clone, Debug, EnumIter)]
pub enum Relation {}

impl RelationTrait for Relation {
    fn def(&self) -> RelationDef {
        panic!("No RelationDef")
    }
}

impl ActiveModelBehavior for ActiveModel {}
