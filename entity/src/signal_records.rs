//! SeaORM Entity. Generated by sea-orm-codegen 0.9.1

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "signal_records")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    pub strategy_name: String,
    pub state: i8,
    pub side: i8,
    pub open_price: f64,
    pub close_price: f64,
    pub profit_and_loss: f64,
    pub created_at: DateTime,
    pub updated_at: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter)]
pub enum Relation {
    Strategies,
}

impl RelationTrait for Relation {
    fn def(&self) -> RelationDef {
        match self {
            Self::Strategies => Entity::belongs_to(super::strategies::Entity)
                .from(Column::StrategyName)
                .to(super::strategies::Column::Name)
                .into(),
        }
    }
}

impl Related<super::strategies::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Strategies.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
